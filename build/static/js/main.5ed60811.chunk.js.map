{"version":3,"sources":["services/personServer.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Filter","filter","handleFilter","value","onChange","Form","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Content","persons","removePerson","map","person","name","toLowerCase","includes","Person","Notification","notification","className","style","color","fontSize","borderWidth","borderColor","borderStyle","display","backgroundColor","padding","ErrorMessage","errorMessage","number","ButtonDelete","onClick","App","useState","setPersons","useEffect","personServer","setNewName","setNewNumber","setFilter","setNotification","setErrorMessage","event","target","preventDefault","some","per","modPerson","find","window","confirm","setTimeout","catch","error","concat","parseInt","removable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ed60811.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(baseUrl + \"/\" + id, newPerson).then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(baseUrl + \"/\" + id)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport personServer from './services/personServer'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n\n  const fetchPersons = () => {\n    personServer\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  } \n  \n  useEffect(fetchPersons, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    \n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(persons.some(per => per.name === newName)) {\n        \n      const modPerson = persons.find(person => person.name === newName)\n      const confirmation = window.confirm(`${newName} is aleady added to phonebook. Do you want to replace the number ${modPerson.number} with ${newNumber}?`)\n\n      if(confirmation) {\n        personServer\n          .update(modPerson.id, newPerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== modPerson.id ? person : response))\n            setNotification(\"Number for \" + modPerson.name + \" have been changed to \" + newNumber + \".\") \n            setTimeout(() => {\n              setNotification(null)\n            }, 2000)\n          })\n          .catch(error => {\n            setErrorMessage(modPerson.name + \" is already removed from the server\")\n            setPersons(persons.filter(person => person.id !== modPerson.id))\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n\n      } else {\n        personServer\n          .create(newPerson)\n          .then(response => {\n            setPersons(persons.concat(response))\n            setNotification(newName + \" have been added to the Phonebook\") \n            setTimeout(() => {\n              setNotification(null)\n            }, 2000)\n          })\n        }\n      \n    setNewName('')\n    setNewNumber('')  \n  \n  }\n  \n  const removePerson = (event) => {\n    const id = parseInt(event.target.id)\n\n    const removable = persons.find(person => {\n      return person.id === id\n    })\n\n    const confirm = window.confirm(\"Are you sure you want to remove \" + removable.name)\n    if(confirm) {\n      personServer\n        .remove(id)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== id ? person : response)\n          )\n\n          setNotification(removable.name + \" have been removed\") \n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n        })\n        .catch(error => {\n          setErrorMessage(removable.name + \" is already removed from the server\")\n          setPersons(persons.filter(person => person.id !== removable.id))\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Filter filter = {filter} handleFilter = {handleFilter} />\n      <ErrorMessage errorMessage = {errorMessage} />\n      <Notification notification = {notification} />\n      <Form addPerson = {addPerson} newName = {newName} handleNameChange = {handleNameChange} newNumber = {newNumber} handleNumberChange = {handleNumberChange} />\n      <h2>Numbers</h2>\n      <Content persons = {persons} removePerson={removePerson} filter = {filter} />\n    </div>\n  )\n  \n}\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <p>\n      Filter: <input value = {filter} onChange = {handleFilter} />\n    </p>\n  )\n}\n\nconst Form = (props) => {\n  return (\n    <form onSubmit = {props.addPerson}>\n        <h2>Add new person</h2>\n        <div>\n          Name: <input value = {props.newName} onChange = {props.handleNameChange} />\n          <br></br>\n          Number: <input value = {props.newNumber} onChange = {props.handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nconst Content = ({persons, filter, removePerson}) => {\n  return (\n    <div>\n      {persons.map(person => {\n        if(typeof(person.name) === \"undefined\") {\n          return null\n        }\n        if(person.name.toLowerCase().includes(filter.toLowerCase())) {\n          return Person({person, removePerson})\n        }\n        return null\n      })} \n    </div>\n  )\n}\n\nconst Notification = ({notification}) => {\n  const notiStyle = {\n    color: 'green',\n    fontSize: 20,\n    borderWidth: 2,\n    borderColor: 'green',\n    borderStyle: \"solid\",\n    display: \"inline\",\n    backgroundColor: 'rgb(190,190,190)',\n    padding: 5\n  }\n\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\" style={notiStyle}>\n      {notification}\n    </div>\n  )\n}\n\nconst ErrorMessage = ({errorMessage}) => {\n  const errorStyle = {\n    color: 'red',\n    fontSize: 20,\n    borderWidth: 2,\n    borderColor: 'red',\n    borderStyle: \"solid\",\n    display: \"inline\",\n    backgroundColor: 'rgb(190,190,190)',\n    padding: 5\n  }\n\n  if (errorMessage === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\" style={errorStyle}>\n      {errorMessage}\n    </div>\n  )\n}\n\nconst Person = ({person, removePerson}) => {\n  return (\n    <p key = {person.id}>\n      {person.name} {person.number} <ButtonDelete removePerson={removePerson} id={person.id} />\n    </p>\n  )\n}\n\nconst ButtonDelete = ({id, removePerson}) => {\n  return (\n    <button type=\"button\" id={id} onClick={removePerson}>Delete</button>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}